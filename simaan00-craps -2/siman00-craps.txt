Assignment name: Assignment 6
TCSS 305 C: Programming Practicum, Winter 2023


Name: Sado Iman
UWNetID: simaan00


Assignment Overview:
The purpose of this assignment was to have us create our own Model, View and Controllers to create a java GUI. In past projects, we were given a template for the model view and controllers but for this project we were asked to do it all ourselves. This project wanted us to combine all of the knowledge we gained from the previous projects into our own GUI. So we had to build a Java GUI that included a model a view and a controller all from scratch. We had the last three projects to refer to when building our own GUI. So for this project, we were asked to create a craps game. We had to implement the rules of a craps game correctly, set up a menu for the game, as well as create different panels for each aspect of the game. In the menu we were asked to have certain menu items, such as a start, an about, and a rules menu item just to name a few. For these menu items, we also had to include keyboard shortcuts for them. We were given some creativity in terms of how we could format the game and how we could make it look. We were required to implement the game correctly and have the required panels set up on the frame as outlined in the rubric. We were expected to include a panel for the number of wins for the house and the player, the dives rolled, the bet amount, the bank amount, and a play again button. We also had to create JUnit tests to make sure our classes were working correctly. For extra credit we were allowed to use our creativity for the GUI, create sounds, and draw the dice onto the frame for each roll. Overall, this was the first full project, where we had to create and implement the model view and controller all by ourselves.

Technical Impression:

I think that having the last few projects to look back on as reference was very helpful while I was working on this project. It helped me get set up and without it I think doing this project would have been a lot harder. So in the beginning setting up the model, and the view was not that difficult, because I could look back on the previous projects as a reference. But I did have a hard time with the property listeners at first. In the beginning, I had them all set up in the separate panels Instead of the controller. But I could not figure out how to properly implemented in the controller. So what I ended up doing, was doing all of the actual listeners inside of the controller, even though it made the controller code a lot longer, this is just what ended up working for me in the end. Setting up the panels onto the frame was also a little difficult because I wanted to format it a certain way, and so it took some time to format it onto the frame. I think the biggest issue for me in the beginning, was conceptualizing, how and where to put the code for the model, view, and controller, and how they all interacted with each other. But I found that using the debugging tool on IntelliJ was helpful for me to understand how the code was all interacting with one another. I also found an alternative way to check if the user input is a numerical value which is by using regex, and I found it from stack overflow. I think I will use this method from here on out because it is simpler than the way I wouldâ€™ve done it before. The JUnit tests were also a little hard because of the random behavior of the dice. Overall, this project was a little difficult at first, but I think being able to debug and look at how the entire project interacts with the other classes was helpful for me in understanding what the code was doing. 


Unresolved problems in my submission:
The window size I tried to format a little better but it would sometimes cut off some of the panels so I left it the size it is even though it is not packed onto the window. I had some difficulties with the JUnit test for the setMyWins, it passed most of the time but sometimes it would fail. I tried to implement the singleton design pattern but am not sure I did correctly. The sounds for the extra credit are working for me on my computer but I had a friend check on theirs and it gave a file not found exception when they ran it, I tried to make the file path accessible through the sounds folder I added in my project under the src folder but if this is an issue during grading I can try and clear it up then. 


Citations and Collaborations:
I collaborated with Liam Barragan and throughout the project we helped answer each others questions when we needed help. I also looked back on prior lecture recordings and slides when I was stuck. 
I also used articles online, YouTube, java API and sometimes stack overflow to help me when I was confused or was stuck and didn't know where to go. I also asked Emily Zapata and Jian Azul for help on occasion and tried to help them when they needed help as well. I also had a meeting with a tutor named Chloe at the TLC about the project on Sunday who helped me a little when I had questions about implementing the property change listeners and the property change support part. 
https://www.w3schools.com/java/java_regex.asp
https://www.youtube.com/watch?v=icf5S9fzRXE
https://www.youtube.com/watch?v=5o3fMLPY7qY
https://www.youtube.com/watch?v=4BRUmU-ETRk
https://www.youtube.com/watch?v=ObVnyA8ar6Q
https://www.youtube.com/watch?v=1G4lBJW1vfM
https://stackoverflow.com/questions/9862165/jmenu-actionlistener
https://stackoverflow.com/questions/1264674/java-property-change-listeners
https://docs.oracle.com/javase%2Ftutorial%2Fuiswing%2F%2F/events/changelistener.html
https://stackoverflow.com/questions/14811014/writing-a-junit-test-for-a-random-number-generator


Extra Credit Attempted:
I did the extra credit for the sounds for the wins, losses and rolls. I tried to implement the second extra credit for drawing the dice and created the dice images, but did not complete the part where the dice show up on the screen and change for each roll. 

Questions:
None